// ---------------------------------------------------------------- //
// This file is autogenerated by pioasm version 2.2.0; do not edit! //
// ---------------------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ---------------- //
// signal_generator //
// ---------------- //

#define signal_generator_wrap_target 0
#define signal_generator_wrap 15
#define signal_generator_pio_version 0

static const uint16_t signal_generator_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block
    0xa027, //  1: mov    x, osr
    0xe009, //  2: set    pins, 9
    0x0043, //  3: jmp    x--, 3
    0x80a0, //  4: pull   block
    0xa027, //  5: mov    x, osr
    0xe000, //  6: set    pins, 0
    0x0047, //  7: jmp    x--, 7
    0x80a0, //  8: pull   block
    0xa027, //  9: mov    x, osr
    0xe006, // 10: set    pins, 6
    0x004b, // 11: jmp    x--, 11
    0x80a0, // 12: pull   block
    0xa027, // 13: mov    x, osr
    0xe000, // 14: set    pins, 0
    0x004f, // 15: jmp    x--, 15
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program signal_generator_program = {
    .instructions = signal_generator_program_instructions,
    .length = 16,
    .origin = -1,
    .pio_version = signal_generator_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config signal_generator_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + signal_generator_wrap_target, offset + signal_generator_wrap);
    return c;
}
#endif

